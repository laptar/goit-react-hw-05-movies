{"version":3,"file":"static/js/396.a945da13.chunk.js","mappings":"wOACA,EAAsB,uBAAtB,EAAoD,wBAApD,EAAuF,4BAAvF,EAA6H,2BAA7H,EAAiK,0B,SCIpJA,EAAY,WACvB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMjB,GALAC,QAAQC,IAAIL,EAASM,MAAMC,SAAWP,EAASM,MAAME,SAErDC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBf,GAASgB,MAAK,SAAAC,GAAG,OAAIb,EAASa,QAC7C,CAACjB,IACAG,EACF,OACE,gCACE,mBACEe,UAAWC,EACXC,KAAK,SACLC,QAAS,wBACPd,EAAQ,UAACF,EAASM,MAAMC,SAAWP,EAASM,MAAME,cAA1C,QAAoD,MAJhE,sBASA,iBAAKK,UAAWC,EAAhB,WACE,gBACEG,MAAM,MACNC,IAAK,mCAAqCpB,EAAMqB,YAChDC,IAAKtB,EAAMuB,kBAEb,0BACE,wBAAKvB,EAAMuB,uBAGf,iBAAKR,UAAWC,EAAhB,WACE,SAAC,KAAD,CACER,MAAON,EAASM,MAChBO,UAAW,qBAAGS,SACJ,UAAMR,EAAN,YAAmBA,GAAaA,GAE1CS,GAAE,OALJ,mBASA,SAAC,KAAD,CACEjB,MAAON,EAASM,MAChBO,UAAW,qBAAGS,SACJ,UAAMR,EAAN,YAAmBA,GAAaA,GAE1CS,GAAE,UALJ,4BC9CV,EAA0B,gCCGbC,EAAiB,WAC5B,OACE,iBAAKX,UAAWC,EAAhB,WACE,SAACpB,EAAD,KACA,SAAC,KAAD,S,iMCQA+B,E,MAAmBC,GAAAA,OAAa,CACpCC,QAAS,+BACTC,OAToB,CACpBC,QAAS,mCACTC,SAAU,QACVC,KAAM,EACNC,eAAe,KAQJC,EAAY,mCAAG,sGACHR,EAAiBS,IAAI,qBADlB,uBAClBC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qDAKZC,EAAW,mCAAG,WAAMR,GAAN,yFACFH,EAAiBS,IAAI,gBAAiB,CAAEN,OAAAA,IADtC,uBACjBO,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXzB,EAAe,mCAAG,WAAM2B,GAAN,yFACNZ,EAAiBS,IAAjB,gBAA8BG,IADxB,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAe,mCAAG,WAAMD,GAAN,yFACNZ,EAAiBS,IAAjB,gBAA8BG,EAA9B,aADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAe,mCAAG,WAAMF,GAAN,yFACNZ,EAAiBS,IAAjB,gBAA8BG,EAA9B,aADM,uBACrBF,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://goit-react-hw-05-movies/./src/Pages/AboutMoviePage/AboutMoviePage.module.css?d04f","Pages/AboutMoviePage/AboutMoviePage.jsx","fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieCard_btn__RnwpY\",\"card\":\"MovieCard_card__G6MP-\",\"listLink\":\"MovieCard_listLink__-9z69\",\"navLink\":\"MovieCard_navLink__+HXUp\",\"active\":\"MovieCard_active__4M6Rk\"};","import { useState, useEffect } from 'react';\nimport { getMovieDetails } from '../../fetchApi';\nimport { useParams, NavLink, useNavigate, useLocation } from 'react-router-dom';\nimport s from './MovieCard.module.css';\n\nexport const MovieCard = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  console.log(location.state.pathname + location.state.search);\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(res => setMovie(res));\n  }, [movieId]);\n  if (movie) {\n    return (\n      <section>\n        <button\n          className={s.btn}\n          type=\"button\"\n          onClick={() =>\n            navigate(location.state.pathname + location.state.search ?? '/')\n          }\n        >\n          Go back\n        </button>\n        <div className={s.card}>\n          <img\n            width=\"300\"\n            src={'https://image.tmdb.org/t/p/w500/' + movie.poster_path}\n            alt={movie.original_title}\n          />\n          <div>\n            <h2>{movie.original_title}</h2>\n          </div>\n        </div>\n        <div className={s.listLink}>\n          <NavLink\n            state={location.state}\n            className={({ isActive }) =>\n              isActive ? `${s.navLink} ${s.active}` : s.navLink\n            }\n            to={`cast`}\n          >\n            Cast\n          </NavLink>\n          <NavLink\n            state={location.state}\n            className={({ isActive }) =>\n              isActive ? `${s.navLink} ${s.active}` : s.navLink\n            }\n            to={`reviews`}\n          >\n            Reviews\n          </NavLink>\n        </div>\n      </section>\n    );\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"AboutMoviePage_section__MB5Jd\"};","import { Outlet } from 'react-router-dom';\nimport { MovieCard } from '../../components/MovieCard/MovieCard';\nimport s from './AboutMoviePage.module.css';\n\nexport const AboutMoviePage = () => {\n  return (\n    <div className={s.section}>\n      <MovieCard />\n      <Outlet />\n    </div>\n  );\n};\n","// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nimport axios from 'axios';\n\nconst defaultParams = {\n  api_key: 'cb1d0f4a7bc8495540b668929e8899ef',\n  language: 'en-US',\n  page: 1,\n  include_adult: false,\n};\n\nconst movieDatabaseApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: defaultParams,\n});\n\nexport const trendingList = async () => {\n  const { data } = await movieDatabaseApi.get('/trending/all/day');\n  return data;\n};\n\nexport const searchMovie = async params => {\n  const { data } = await movieDatabaseApi.get('/search/movie', { params });\n  return data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await movieDatabaseApi.get(`movie/${movie_id}`);\n  return data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const { data } = await movieDatabaseApi.get(`movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const { data } = await movieDatabaseApi.get(`movie/${movie_id}/reviews`);\n  return data;\n};\n"],"names":["MovieCard","movieId","useParams","useState","movie","setMovie","location","useLocation","navigate","useNavigate","console","log","state","pathname","search","useEffect","getMovieDetails","then","res","className","s","type","onClick","width","src","poster_path","alt","original_title","isActive","to","AboutMoviePage","movieDatabaseApi","axios","baseURL","params","api_key","language","page","include_adult","trendingList","get","data","searchMovie","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}